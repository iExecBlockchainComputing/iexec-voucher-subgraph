name: Deploy Subgraph

on:
  workflow_dispatch:
    inputs:
      START_BLOCK:
        description: 'Start Block for Subgraph Deployment'
        required: false
        default: '30306387'
      VOUCHER_HUB_ADDRESS:
        description: 'Voucher Hub Address'
        required: false
        default: '0x3137B6DF4f36D338b82260eDBB2E7bab034AFEda'
  pull_request: # Add this line to trigger the workflow on pull requests

jobs:
  deploy-subgraph:
    runs-on:
      group: Azure_runners
      labels: [ self-hosted, Linux, X64 ]

    strategy:
      matrix:
        environment: [tmp, staging, prod]
        include:
          - environment: staging
            subgraph_name: bellecour/staging-iexec-voucher
            branch: develop
            target: staging
          - environment: tmp
            subgraph_name: bellecour/tmp-iexec-voucher
            branch: main
            target: tmp
          - environment: prod
            subgraph_name: bellecour/iexec-voucher
            branch: main
            target: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Init
        run: npm ci
      - name: Check Format
        run: npm run check-format
      - name: Run unit tests
        run: npm run test
      - name: Build
        run: npm run build
      - name: Deploy Subgraph
        if: github.ref_name == matrix.branch && github.event.inputs.target == matrix.target
        env:
          START_BLOCK: ${{ inputs.START_BLOCK }}
          VOUCHER_HUB_ADDRESS: ${{ inputs.VOUCHER_HUB_ADDRESS }}
          SUBGRAPH_NAME: ${{ matrix.subgraph_name }}
        run: |
          if [ "${{ matrix.environment }}" == "staging" ]; then
            export GRAPHNODE_URL="${{ secrets.STAGING_GRAPHNODE_URL }}"
            export IPFS_URL="${{ secrets.STAGING_IPFS }}"
          else
            export GRAPHNODE_URL="${{ secrets.GRAPHNODE_URL }}"
            export IPFS_URL="${{ secrets.IPFS_URL }}"
          fi

          echo "Deploying commit $GITHUB_SHA on subgraph $SUBGRAPH_NAME"
          echo "Using GRAPHNODE_URL=$GRAPHNODE_URL"
          echo "Using IPFS_URL=$IPFS_URL"
          npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
          npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $(npm pkg get version)
      # --- Main branch only ---
      - name: Login to DockerRegis
        if: ${{ github.ref_name == 'main' }}
        uses: docker/login-action@v3
        with:
          registry: docker-regis.iex.ec
          username: ${{ secrets.NEXUS-USER }}
          password: ${{ secrets.NEXUS-PASSWORD }}
      - name: Build & Push Docker Image
        if: ${{ github.ref_name == 'main' }}
        env:
          IMAGE_NAME: 'voucher-subgraph-deployer'
          GITHUB_SHA_SHORT: ${{ github.sha }}
        run: |
          echo "Extracting npm version..."
          # Capture the current npm version from package.json (removing surrounding quotes)
          npm_version=$(npm pkg get version | tr -d '"')

          echo "NPM_VERSION=$npm_version"

          # Define your tags (for example, 'latest' and 'prod-version')
          TAGS="latest prod-${npm_version}"

          # Build & Push the image with all tags
          for tag in $TAGS; do
            docker build -t docker-regis.iex.ec/$IMAGE_NAME:$tag ./docker
            docker push docker-regis.iex.ec/$IMAGE_NAME:$tag
          done
