name: Deploy Subgraph

on:
  workflow_dispatch:
    inputs:
      START_BLOCK:
        description: 'Start Block for Subgraph Deployment'
        required: false
        default: '30306387'
      VOUCHER_HUB_ADDRESS:
        description: 'Voucher Hub Address'
        required: false
        default: '0x3137B6DF4f36D338b82260eDBB2E7bab034AFEda'
      TARGET:
        description: 'Deployment Target (tmp, staging, prod)'
        required: true
        type: choice
        options:
          - tmp
          - staging
          - prod

jobs:
  deploy-subgraph:
    runs-on:
      group: Azure_runners
      labels: [ self-hosted, Linux, X64 ]

    steps:
      - name: Validate Target
        run: |
          TARGET="${{ github.event.inputs.TARGET }}"
          BRANCH="${{ github.ref_name }}"

          if [[ "$TARGET" == "staging" ]]; then
            echo "✅ Valid target: $TARGET on branch $BRANCH"
          elif [[ "$TARGET" == "tmp" && "$BRANCH" == "main" ]]; then
            echo "✅ Valid target: $TARGET on branch $BRANCH"
          elif [[ "$TARGET" == "prod" && "$BRANCH" == "main" ]]; then
            echo "✅ Valid target: $TARGET on branch $BRANCH"
          else
            echo "❌ ERROR: Invalid target ($TARGET) for branch ($BRANCH)"
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Init
        run: npm ci
      - name: Check Format
        run: npm run check-format
      - name: Run unit tests
        run: npm run test
      - name: Codegen
        run: npm run codegen
      - name: Set Subgraph Name
        run: |
          TARGET="${{ github.event.inputs.TARGET }}"

          if [[ "$TARGET" == "staging" ]]; then
            echo "SUBGRAPH_NAME=bellecour/staging-iexec-voucher" >> $GITHUB_ENV
          elif [[ "$TARGET" == "tmp" ]]; then
            echo "SUBGRAPH_NAME=bellecour/tmp-iexec-voucher" >> $GITHUB_ENV
          elif [[ "$TARGET" == "prod" ]]; then
            echo "SUBGRAPH_NAME=bellecour/iexec-voucher" >> $GITHUB_ENV
          fi
      - name: Deploy Subgraph
        env:
          START_BLOCK: ${{ inputs.START_BLOCK }}
          VOUCHER_HUB_ADDRESS: ${{ inputs.VOUCHER_HUB_ADDRESS }}
          SUBGRAPH_NAME: ${{ env.SUBGRAPH_NAME }}
        run: |
          if [ "${{ github.event.inputs.TARGET }}" == "staging" ]; then
            export GRAPHNODE_URL="${{ vars.STAGING_GRAPHNODE_URL }}"
            export IPFS_URL="${{ vars.STAGING_IPFS }}"
          else
            export GRAPHNODE_URL="${{ vars.GRAPHNODE_URL }}"
            export IPFS_URL="${{ vars.IPFS_URL }}"
          fi

          echo "Deploying commit $GITHUB_SHA on subgraph $SUBGRAPH_NAME"
          npm run deploy:prepare-manifest
          npx graph create --node $GRAPHNODE_URL $SUBGRAPH_NAME
          npx graph deploy --node $GRAPHNODE_URL $SUBGRAPH_NAME --ipfs $IPFS_URL --version-label $(npm pkg get version)

      # --- Main branch only ---
      - name: Login to Docker Hub
        if: github.event.inputs.TARGET == 'prod' && github.ref_name == 'main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push Docker Image
        if: github.ref_name == 'main'
        env:
          IMAGE_NAME: 'iexecblockchaincomputing/voucher-subgraph-deployer'
        run: |
          echo "Extracting npm version..."
          npm_version=$(npm pkg get version | tr -d '"')

          echo "NPM_VERSION=$npm_version"

          TAGS="latest prod-${npm_version}"

          for tag in $TAGS; do
            docker build -t $IMAGE_NAME:$tag ./docker
            docker push $IMAGE_NAME:$tag
          done
