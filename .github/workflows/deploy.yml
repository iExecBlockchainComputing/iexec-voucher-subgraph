name: Deploy Subgraph

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select deployment environment'
        required: true
        type: choice
        options:
          - custom
          - staging
          - tmp
          - prod
      networkName:
        description: 'Network Name'
        required: true
        default: 'bellecour'
        type: string
      voucherHubAddress:
        description: 'Voucher Hub Address'
        required: true
        default: '0x3137B6DF4f36D338b82260eDBB2E7bab034AFEda'
        type: string
      voucherHubStartBlock:
        description: 'Start Block for Voucher Hub'
        required: true
        default: '30306387'
        type: string
      versionLabel:
        description: 'Version Label for Subgraph Deployment'
        required: true
        default: 'develop'
        type: string
      dockerImageVersion:
        description: 'Version of the deployer docker image to use'
        required: true
        type: string
      # Custom environment inputs
      customGraphNodeUrl:
        description: 'Custom Graph Node URL (only for custom environment)'
        required: false
        type: string
      customIpfsUrl:
        description: 'Custom IPFS URL (only for custom environment)'
        required: false
        type: string

jobs:
  # TODO: See how to ensure that the default CI workflow has run before this workflow

  deploy-subgraph:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Docker Image Version
        if: ${{ !inputs.dockerImageVersion }}
        run: |
          echo "❌ Docker image version parameter cannot be null or empty."
          exit 1

      - name: Set Environment Variables
        id: set-env
        run: |
          # Initialize variables
          GRAPH_NODE_URL=""
          IPFS_URL=""
          ENV_NAME=""

          case "${{ inputs.environment }}" in
            "prod"|"tmp"|"staging")
              echo "GRAPH_NODE_URL=${{ vars.GRAPH_NODE_URL }}" >> $GITHUB_ENV
              echo "IPFS_URL=${{ vars.IPFS_URL }}" >> $GITHUB_ENV
              echo "ENV_NAME=${{ vars.ENV_NAME }}" >> $GITHUB_ENV
              ;;
            "custom")
              if [[ -z "${{ inputs.customGraphNodeUrl }}" || -z "${{ inputs.customIpfsUrl }}" ]]; then
                echo "❌ Custom URLs are required when using custom environment"
                exit 1
              fi
              echo "GRAPH_NODE_URL=${{ inputs.customGraphNodeUrl }}" >> $GITHUB_ENV
              echo "IPFS_URL=${{ inputs.customIpfsUrl }}" >> $GITHUB_ENV
              echo "ENV_NAME=" >> $GITHUB_ENV
              ;;
            *)
              echo "❌ Invalid environment selected"
              exit 1
              ;;
          esac

          # Print deployment information
          echo "Environment: ${{ inputs.environment }}"
          echo "Graph Node URL: $GRAPH_NODE_URL"
          echo "IPFS URL: $IPFS_URL"
          echo "Network Name: ${{ inputs.networkName }}"
          echo "Voucher Hub Address: ${{ inputs.voucherHubAddress }}"
          echo "Start Block: ${{ inputs.voucherHubStartBlock }}"
          echo "Version Label: ${{ inputs.versionLabel }}"
          echo "Deployer image version: ${{ inputs.dockerImageVersion }}"

      - name: Deploy Subgraph
        run: |
          docker run \
            --rm \
            -e NETWORK_NAME='${{ inputs.networkName }}' \
            -e DEPLOY_ENV='${{ env.ENV_NAME }}' \
            -e VOUCHER_HUB_ADDRESS='${{ inputs.voucherHubAddress }}' \
            -e VOUCHER_HUB_START_BLOCK='${{ inputs.voucherHubStartBlock }}' \
            -e IPFS_URL='${{ env.IPFS_URL }}' \
            -e GRAPHNODE_URL='${{ env.GRAPH_NODE_URL }}' \
            -e VERSION_LABEL='${{ inputs.versionLabel }}' \
            iexechub/voucher-subgraph-deployer:${{ inputs.dockerImageVersion }}
