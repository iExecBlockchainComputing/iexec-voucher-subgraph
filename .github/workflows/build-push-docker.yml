name: Build and Push Subgraph Deployer Docker Image

# TODO: See how to automate the run of this workflow
on:
  push:
    branches:
      - develop
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
        type: choice
        options:
          - main
          - develop
          - release/*
          - feature/*
  
jobs:
  # TODO: See how to ensure that the default CI workflow has run before this workflow

  get-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.latest_tag.outputs.tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Git Tag
        id: latest_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

  verify-npm-version:
    needs: get-latest-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure npm package version matches Git tag
        run: |
          LATEST_TAG="${{ needs.get-latest-tag.outputs.latest_tag }}"
          PACKAGE_VERSION=$(npm pkg get version | tr -d '"')

          echo "🔹 Latest Git Tag: $LATEST_TAG"
          echo "🔹 package.json Version: $PACKAGE_VERSION"

          if [[ "$LATEST_TAG" != "v$PACKAGE_VERSION" ]]; then
            echo "❌ Tag version ($LATEST_TAG) does not match package.json version (v$PACKAGE_VERSION)"
            exit 1
          fi

          echo "✅ Versions match! Proceeding..."

  build-and-push:
    needs: 
      - get-latest-tag
      - verify-npm-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine Docker Image Tags
        id: version
        run: |
          BRANCH="${{ github.ref_name }}"
          LAST_TAG="${{ needs.get-latest-tag.outputs.latest_tag }}"
          IMAGE_NAME="iexechub/voucher-subgraph-deployer"
          SHORT_COMMIT=$(git rev-parse --short HEAD)
          
          # Remove 'v' prefix from tag
          VERSION=${LAST_TAG#v}
          
          # Initialize TAGS variable
          TAGS=""
          
          if [[ "$BRANCH" == "main" ]]; then
            TAGS="$IMAGE_NAME:$VERSION,$IMAGE_NAME:latest"
          elif [[ "$BRANCH" == "develop" ]]; then
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              TAGS="$IMAGE_NAME:dev,$IMAGE_NAME:dev-$SHORT_COMMIT"
            else
              TAGS="$IMAGE_NAME:dev"
            fi
          elif [[ "$BRANCH" == release/* ]]; then
            if [[ ! $VERSION == *"-rc"* ]]; then
              echo "❌ Release branches must use RC tags"
              exit 1
            fi
            TAGS="$IMAGE_NAME:$VERSION"
          elif [[ "$BRANCH" == feature/* && "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            FEATURE_NAME=${BRANCH#feature/}
            TAGS="$IMAGE_NAME:feature-$FEATURE_NAME-$SHORT_COMMIT"
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 1
          fi
          
          echo "TAGS=$TAGS" >> $GITHUB_ENV
          echo "✅ Resolved TAGS: $TAGS"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.TAGS }}
