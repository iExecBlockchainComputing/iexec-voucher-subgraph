name: Build and Push Subgraph Deployer Docker Image

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
  workflow_dispatch:

jobs:
  # TODO: See how to ensure that the default CI workflow has run before this workflow
  build-and-push:
    if: |
      github.event_name == 'workflow_dispatch' &&
      (
        github.ref == 'refs/heads/develop' ||
        startsWith(github.ref, 'refs/heads/feature/')
      ) ||
      (
        github.event_name == 'push' && (
          startsWith(github.ref, 'refs/heads/release/') ||
          startsWith(github.ref, 'refs/heads/main')
        )
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Run npm version check only on main & release/**
      - name: Verify npm package version matches tag
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/release/')
        uses: nick-y-ito/gha-npm-version-match@v1

      - name: Determine Docker Image Tags
        id: version
        run: |
          BRANCH="${{ github.ref_name }}"
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          IMAGE_NAME="iexechub/voucher-subgraph-deployer"
          SHORT_COMMIT=$(git rev-parse --short HEAD)

          # Initialize TAGS variable
          TAGS=""

          if [[ "$BRANCH" == "main" ]]; then
            TAGS="$IMAGE_NAME:$TAG_VERSION,$IMAGE_NAME:latest"
          elif [[ "$BRANCH" == release/* ]]; then
            TAGS="$IMAGE_NAME:$TAG_VERSION"
          elif [[ "$BRANCH" == "develop" || "$BRANCH" == feature/* ]]; then
            TAGS="$IMAGE_NAME:dev-$SHORT_COMMIT"
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 1
          fi

          echo "TAGS=$TAGS" >> $GITHUB_ENV
          echo "✅ Resolved TAGS: $TAGS"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.TAGS }}
