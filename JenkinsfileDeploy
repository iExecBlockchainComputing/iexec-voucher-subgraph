node('docker') {

    // Global variables
    String DOCKER_IMAGE_VERSION = '8491d157'
    def userInput
    def forkUrl = "https://bellecour.iex.ec"
    def voucherHubStartBlock = ''

    stage('Set properties') {
        timeout(time: 5, unit: 'MINUTES') {
            userInput = input(
                id: 'select-deployment',
                message: 'Select environment & service',
                parameters : [
                    string(name: 'targetRemoteHost', description: 'Hostname where to deploy the subgraph', defaultValue: '', trim: true),
                    string(name: 'networkName', description: 'Network Name', defaultValue: 'bellecour', trim: true),
                    string(name: 'voucherHubAddress', description: 'Voucher Hub Address', defaultValue: '0x3137B6DF4f36D338b82260eDBB2E7bab034AFEda', trim: true),
                    string(name: 'voucherHubStartBlock', description: 'Start Block for Voucher Hub', defaultValue: '', trim: true),
                    string(name: 'versionLabel', description: 'Version Label for Subgraph Deployment', defaultValue: 'develop', trim: true)
                ]
            )
        }
        println """
            Target remote host env: $userInput.targetRemoteHost
            Graph Node URL: http://$userInput.targetRemoteHost:8020
            IPFS URL: http://$userInput.targetRemoteHost:5001
            Network Name: $userInput.networkName
            Voucher Hub Address: $userInput.voucherHubAddress
            Start Block: $userInput.voucherHubStartBlock
            Version Label: $userInput.versionLabel
        """
    }

    stage('Setup') {
        sh 'apk add jq'
    }

    stage('Compute voucherHubStartBlock') {
        if (!userInput.voucherHubStartBlock) {
            // Compute the start block by fetching it from the Bellecour fork URL
            voucherHubStartBlock = sh (
                script: """
                    # Fetch the current block number from the Bellecour fork
                    curl -s -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' -H "Content-Type: application/json" ${forkUrl} \
                    | jq -r '.result' \
                    | xargs printf "%d"
                """,
                returnStdout: true
            ).trim()

            println "Computed Voucher Hub Start Block: ${voucherHubStartBlock}"
        } else {
            voucherHubStartBlock = userInput.voucherHubStartBlock
        }
    }

    stage('Clean Workspace') {
        cleanWs()
    }

    stage('Checkout scm') {
        checkout scm
    }

    stage('Run operation') {
        withCredentials([
            usernamePassword(credentialsId: 'docker-regis', usernameVariable: 'username', passwordVariable: 'password')
        ]) {
            // Login to download Docker image
            sh "echo -n '${password}' | docker login --username '${username}' --password-stdin docker-regis.iex.ec"

            // Run the container for subgraph deployment
            sh """
                docker run \
                    --rm \
                    -e GRAPHNODE_URL='http://$userInput.targetRemoteHost:8020' \
                    -e IPFS_URL='http://$userInput.targetRemoteHost:5001' \
                    -e VOUCHER_HUB_ADDRESS='$userInput.voucherHubAddress' \
                    -e VOUCHER_HUB_START_BLOCK='$voucherHubStartBlock' \
                    -e NETWORK_NAME='$userInput.networkName' \
                    -e VERSION_LABEL='$userInput.versionLabel' \
                    docker-regis.iex.ec/voucher-subgraph:$DOCKER_IMAGE_VERSION
            """
            
            // Logout to remove docker credentials
            sh "docker logout docker-regis.iex.ec"
        }
        println "The end."
    }
}
